

host=ppseelm-lx41089
dstDir=/Users/rstyczynski/Documents/IKEA/11.Test/TESTS/10.04.2018/umc_archive
delimiter='_'


for srcDir in $(ls); do
cd $srcDir

mkdir $dstDir/$srcDir

for file in $(ls); do 
  date=$(echo $file | cut -d$delimiter -f1)
  probe=$(echo $file | cut -d$delimiter -f2)
  system=$(echo $file | cut -d$delimiter -f3)
  if [ -z $system ]; then
    newFile=$date$delimiter$host$delimiter$probe
  else
    newFile=$date$delimiter$host$delimiter$probe$delimiter$system
  fi
  cp $file $dstDir/$srcDir/$newFile
done

cd ..
done


#####

dstDir=     /Users/rstyczynski/Documents/IKEA/11.Test/TESTS/10.04.2018/umc_archive/rodmon_data
delimiter='_'

cd $dstDir
for srcDir in $(ls); do
cd $srcDir

for file in $(ls *businessservice*); do 
  date=$(echo $file | cut -d$delimiter -f1)
  host=$(echo $file | cut -d$delimiter -f2)
  probe=$(echo $file | cut -d$delimiter -f3)
  system=$(echo $file | cut -d$delimiter -f4)
  
  grep "service_type,path,name,metrics_type,elapsed-time#average,elapsed-time#max,elapsed-time#min,elapsed-time#sum,error-count#count,message-count#count" $file >/dev/null
  if [ $? -eq 0 ]; then
    suffix=OPERATION
  fi
  
  grep "service_type,path,name,metrics_type,error-count_count,failover-count_count,failure-rate_count,message-count_count,response-time_average,response-time_max,response-time_min,response-time_sum,severity-all_count,sla-severity-all_count,sla-severity-critical_count,sla-severity-fatal_count,sla-severity-major_count,sla-severity-minor_count,sla-severity-normal_count,sla-severity-warning_count,success-rate_count,throttling-time_average,throttling-time_max,throttling-time_min,throttling-time_sum,uri-offline-count_current,uri-offline-count_initial,wss-error_count" $file >/dev/null
  if [ $? -eq 0 ]; then
    suffix=SERVICE
  fi
  
  grep "service_type,path,name,metrics_type,error-count#count,message-count#count,response-time#average,response-time#max,response-time#min,response-time#sum,status#current,status#initial" $file >/dev/null
  if [ $? -eq 0 ]; then
    suffix=URI
  fi
  
  if [ -z $system ]; then
    newFile=$(echo $date$delimiter$host$delimiter$probe | sed "s/businessservice/businessservice_$suffix/")
  else
    newFile=$(echo $date$delimiter$host$delimiter$probe$delimiter$system | sed "s/businessservice/businessservice_$suffix/")
  fi
  echo $file $newFile 
  mv $file $newFile 
done

cd ..
done


###


dstDir=/Users/rstyczynski/Documents/IKEA/11.Test/TESTS/10.04.2018/umc_archive/rodmon_data/data
delimiter='_'

cd $dstDir
for srcDir in $(ls); do
cd $srcDir

for file in $(ls *soabindings*); do 
  date=$(echo $file | cut -d$delimiter -f1)
  host=$(echo $file | cut -d$delimiter -f2)
  probe=$(echo $file | cut -d$delimiter -f3)
  system=$(echo $file | cut -d$delimiter -f4)
  
  grep "error.rate,Errors.count,Errors.throughput,Messages.averageTime,Messages.completed,Messages.throughput,Messages.time,Messages.totalTime,MessagesEvents.count,MessagesEvents.throughput,Messages.count,ServerName,soainfra_composite,soainfra_composite_assembly_member,soainfra_composite_assembly_member_type,soainfra_composite_revision,soainfra_domain" $file >/dev/null
  if [ $? -eq 0 ]; then
    echo "datetime,timezone,timestamp,system,source,error.rate,Errors.count,Errors.throughput,Messages.averageTime,Messages.completed,Messages.throughput,Messages.time,Messages.totalTime,MessagesEvents.count,MessagesEvents.throughput,Messages.count,ServerName,soainfra_composite,soainfra_composite_assembly_member,soainfra_composite_assembly_member_type,soainfra_composite_revision,soainfra_domain" >/tmp/$file
    cat $file | sed 1,1d >>/tmp/$file
  fi

done

cd ..
done
