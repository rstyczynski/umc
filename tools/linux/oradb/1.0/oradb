#!/bin/bash
# Tomas Vitvar, tomas@vitvar.com

# this script directory
getSensorData_bin=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

# check umc was configured
if [ ! -d $umcRoot ]; then
  echo >&2 "umc was not initialized!"
  exit 1
fi

# configuration directory
configDir="$umcRoot/etc/tools/oradb"

args=("$@")

function getArgument {
    for ((i=0; i <= ${#args[@]}; i++)); do
        if [ "${args[i]}" == "$1" ]; then
            echo "${args[i]}"
            exit 0
        fi
    done
    echo ""
}

# the first parameter is timestamp directive
# since we do not use it, we skip it (the value is None)
shift

# the next arguments are delay, count and metric
# metric argument is oradb probe specific
delay=$1 && shift
count=$1 && shift
metric=$1 && shift
config=$1 && shift

# load configuration
if [ -f $configDir/$config ]; then
  source $configDir/$config
fi

# check that the metric file exists and print help if it does not
# this needs to go to err as otherwise would appear in csv when output is logged to a file
if [ ! -f "$configDir/$metric" ]; then
    echo >&2 "Invalid metric file. There is no file with name $configDir/$metric."
    echo >&2 "Usage: umc oradb collect <delay> <count> <metric-file> [--connect <constr>] [<sql-collector arguments>]"
    echo >&2 "Available values for <metric-file> are:"
    pwd=$(pwd)
    cd $configDir
    ls | grep ".sql$" | \
    while read line; do
        printf "  ${line%.*}%-$((20-$(expr length $line)))s  $(cat $line | head -n 1 | grep "\-\-")\n"
    done
    cd $pwd
    exit 1
fi

# db connection string, use the default if none cannot be found as per sql metric or is not specified as argument
connstr=""; 
if [ "$(getArgument "--connect")" == "" ] && [ -z ${ORADB_CONNSTR+x} ]; then 
    connstr="--connect $ORADB_CONNSTR";
fi

# run sql collector
sql-collector $connstr --query $getSensorData_bin/$metric \
    --count $count \
    --interval $delay \
    --delimiter "$CSVdelimiter" \
    $(cat $getSensorData_bin/global-args | grep -v ^# ) \
    "$*" 

