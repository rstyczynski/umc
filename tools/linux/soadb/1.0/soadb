#!/bin/bash
# Tomas Vitvar, tomas@vitvar.com

getSensorData_bin=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

args=("$@")

function getArgument {
    for ((i=0; i <= ${#args[@]}; i++)); do
        if [ "${args[i]}" == "$1" ]; then
            echo "${args[i]}"
            exit 0
        fi
    done
    echo ""
}

# the first parameter is timestamp directive
# since we do not use it, we skip it (the value is None)
shift

# the next arguments are delay, count and metric
# metric argument is soadb probe specific
delay=$1 && shift
count=$1 && shift
metric=$1 && shift

# check that the metric file exists and print help if it does not
if [ ! -f "$getSensorData_bin/$metric.sql" ]; then
    echo "Invalid metric definition. There is no file with name $getSensorData_bin/$metric.sql."
    echo "Usage: umc soadb collect <delay> <count> <metric> [--connect <constr>] [<sql-collector arguments>]"
    echo "Available values for <metric> are:"
    ls | grep ".sql$" | \
    while read line; do
        printf "  ${line%.*}%-$((20-$(expr length $line)))s  $(cat $line | head -n 1 | grep "\-\-")\n"
    done
    exit 1
fi

# db connection string, use the default if none is specified as argument
if [ "$(getArgument "--connect")" == "" ]; then 
    connstr="--connect $DB_CONNSTR"; 
else 
    connstr=""; 
fi

sql-collector $connstr --query $getSensorData_bin/$metric.sql \
    --count $count \
    --interval $delay \
    --delimiter "$CSVdelimiter" \
    $(cat $getSensorData_bin/global-args | grep -v ^# ) \
    "$*" 

